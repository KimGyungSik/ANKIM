spring:
  datasource:
    url: jdbc:h2:tcp://localhost/~/test;MODE=MySQL;DATABASE_TO_LOWER=TRUE;LOCK_TIMEOUT=10000;
    driver-class-name: org.h2.Driver
    username: sa
    password:
    hikari:
      minimum-idle: 10 # 최소 유휴 커넥션
      maximum-pool-size: 1000 # 커넥션 풀 크기
      idle-timeout: 30000 # 유휴 커넥션 최대 유지 시간 (밀리초)
      connection-timeout: 60000 # 최대 연결 대기 시간 (밀리초)
      max-lifetime: 1800000 # 커넥션 최대 수명 (밀리초)
      data-source-properties:
        isolationLevel: READ_COMMITTED # 트랜잭션 격리 수준 (READ_COMMITTED 사용)
        lockTimeout: 10000 # 잠금 대기 시간 (밀리초)
  jpa:
    hibernate:
      ddl-auto: create # 애플리케이션 시작 시 테이블 재생성
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate.dialect: org.hibernate.dialect.H2Dialect
      hibernate:
        connection.isolation: 2 # JDBC Isolation Level (READ_COMMITTED)
        format_sql: true # SQL 포맷 활성화
        default_batch_fetch_size: 1000 # 배치 조회 크기
        jdbc:
          fetch_size: 50 # JDBC 페치 크기
          batch_size: 30 # JDBC 배치 크기
        generate_statistics: true # Hibernate 통계 활성화
        use_sql_comments: true # SQL 주석 활성화
        order_updates: true # 업데이트 명령 정렬
        order_inserts: true # 삽입 명령 정렬
        jdbc.time_zone: UTC # JDBC 시간대 설정
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        trace: true # H2 SQL Trace 활성화
        web-allow-others: true # 외부 접속 허용


  data:
    redis:
      host: localhost
      port: 6379
      timeout: 3000 # Redis 연결 타임아웃 (밀리초)

logging:
  level:
    org:
      springframework:
        orm:
          jpa: DEBUG
      hibernate:
        SQL: DEBUG
        type: TRACE
    com.zaxxer.hikari.HikariConfig: DEBUG # HikariCP 디버깅

decorator:
  datasource:
    p6spy:
      enable-logging: 'true'

management:
  endpoints:
    web:
      exposure:
        include: "*" # 모든 관리 엔드포인트 활성화

actuator:
  metrics:
    enable:
      all: true
  traces:
    max-trace-count: 100 # 요청 및 응답 추적 제한

cloud:
  aws:
    credentials:
      access-key: ${cloud.aws.credentials.access-key}
      secret-key: ${cloud.aws.credentials.secret-key}
    s3:
      bucket: ${cloud.aws.s3.bucket}
    region:
      static: ${cloud.aws.region.static}
    stack:
      auto: false

login:
  attempt:
    max: 5
  lock:
    time: 10

jwt:
  secret: 23aca2ed0815953971212551d4abbfe1ce73b58230ef7be989f3a32f79a0d360
  access:
    token:
      expire:
        time: 3600000 # 1시간( 1000 * 60 * 60 )
  refresh:
    token:
      expire:
        time: 600000 # 10분
      remember:
        time: 604800000 # 7일

mail:
  host: smtp.gmail.com
  port: 587
  username: "jh96.dev@gmail.com"
  password: "fell fchr vphm xvfl"
  properties:
    mail:
      smtp:
        auth: true
        starttls:
          enable: true
          required: true
        connectiontimeout: 5000
        timeout: 5000
        writetimeout: 5000
  auth-code-expiration-millis: 1800000  # 30 * 60 * 1000 == 30?

